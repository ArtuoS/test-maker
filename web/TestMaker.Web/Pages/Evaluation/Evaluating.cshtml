@page "/evaluation/evaluating"
@using TestMaker.Web.Models;
@using TestMaker.Web.Pages.Evaluation;
@using TestMaker.Web.Core.Models;
@model EvaluatingModel
@{
    var evaluation = Model.Instance;
    var searchTypes = new List<SearchTypeModel>
    {
        new SearchTypeModel { Type = SearchType.PasseiDireto, Text = "Passei Direto", Url = "www.passeidireto.com" },
        new SearchTypeModel { Type = SearchType.Brainly, Text = "Brainly", Url = "www.brainly.com.br" },
        new SearchTypeModel { Type = SearchType.Google, Text = "Google" },
    };
    char[] alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToCharArray();
}

<link rel="stylesheet" href="~/css/evaluating.css" asp-append-version="true" />
<script src="~/js/evaluating.js" asp-append-version="true"></script>

<div class="container">
    @if (evaluation is null)
        return;

    @{
        var questionIndex = 1;
    }
    @foreach (var question in evaluation.Questions.Take(10))
    {
        <div class="question" data-question-index="@questionIndex" id="@question.Id">
            @Html.Raw(System.Web.HttpUtility.HtmlDecode(question.BaseText))
            <p hidden id="formatted-question-@question.Id">
                @question.Text
            </p>
            <p>@question.Command</p>
            <div class="row">
                <div class="col-md-9">
                    <form>
                        @{
                            var alternativeIndex = 0;
                            foreach (var alternative in question.Alternatives)
                            {
                                @foreach (var alternativeAttribute in alternative.Attributes)
                                {
                                    if (alternativeAttribute.Name != "texto")
                                        continue;

                                    var questionText = string.Format("{0}) {1}", (char)('A' + alternativeIndex), alternativeAttribute.Value);
                                    <label>
                                        <input class="question-checkbox" type="checkbox" name="question-@question.Id">
                                        @questionText
                                    </label>
                                    alternativeIndex++;
                                }
                            }
                        }
                        <br>
                    </form>
                </div>
                <div class="col-md-3">
                    @foreach (var searchType in searchTypes)
                    {
                        <button class="search-button btn btn-danger" website="@searchType.Url" question="@question.Id">@searchType.Text</button>
                    }
                </div>
            </div>
        </div>
        questionIndex++;
    }

    <button class="extract btn btn-primary">Extrair para gabarito</button>
</div>